## List of complete inputs | filters | output available on the official website: 
## http://logstash.net/docs/latest/index

## Configuration syntax: http://logstash.net/docs/latest/configuration
 

###### Data sources to process #####
input {
    # Answers the question - Where?
    file {
        path => [ "/var/log/apache2/access.log", "/var/log/apache2/other_vhosts_access.log" ]
        type => "apache-access"
    }
    file {
        path => "/var/log/apache2/error.log"
        type => "apache-error"
    } 
    file {
        path => [ "/var/log/syslog", "/var/log/auth.log", "/var/log/mail.info" ]
        type => "syslog"
    }
    file {
        path => "/var/log/iptables.log"
        type => "iptables"
    }
    file {
        path => "/var/log/fail2ban.log"
        type => "fail2ban"
    }
}


filter {
    # Answers the question - what are you looking for? 

    # All lines starting with a space belong to the previous event
    multiline {
        pattern => "^\s"
        negate => false
        what => "previous"
    }

    # ------------------------ Parse services logs into fields ---------------------------
    # APACHE 2
    if [type] == "apache-access" {
        # To process log data (message's content) using some regex or precompiled GROK pattern
        grok {
            match => [ "message", "%{COMBINEDAPACHELOG}"]
        }
        # To extract log's time according to a date pattern
        date {
            match => [ "timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
        }
        # Extraction browser information, if available.
        if [agent] != "" {
            useragent {
                source => "agent"
            }
        }
        if [clientip] != "" {
            geoip {
                source => "clientip"
                add_tag => [ "geoip" ]
                target => "apache_geoip"
            }
        }
    }

    if [type] == "apache-error" {
        grok {
            match => [ "message", "%{APACHEERRORLOG}"]
            # Directory where to find the custom patterns
            patterns_dir => ["/etc/logstash/grok"]
        }
        if [clientip] != "" {
            geoip {
                source => "clientip"
                add_tag => [ "geoip" ]
                target => "apache_geoip"
            }
        }
    }

    # SYSLOG
    if [type] == "syslog" {
        grok {
            match => ["message", "%{SYSLOGBASE}"]
        }
    }

    # IPTABLES
    if [type] == "iptables" {
        grok {
            match => [
                        "message", "%{IPTABLES}",
                        "message", "%{ICMP}",
                        "message", "%{IPTABLES_GENERIC}"
                     ]
            patterns_dir => ["/etc/logstash/grok"]
        }
        # Something wrong occurred !!! :O
        if "_grokparsefailure" in [tags] {
            grok {
                     patterns_dir => "/etc/logstash/grok"
                     match=>["message", "%{IPTABLES_ERROR}" ]
                     add_tag => "iptables-grok_error"
                 }
        }
        # Default 'geoip' == src_ip. That means it's easy to display the DROPPED INPUT :)
        if [src_ip] != "" {
            geoip {
                source => "src_ip"
                add_tag => [ "geoip" ]
                target => "src_geoip"
            }
        }
        if [dst_ip] != "" {
            geoip {
                source => "dst_ip"
                add_tag => [ "geoip" ]
                target => "dst_geoip"
            }
        }
    }

    # Fail2ban
    if [type] == "fail2ban" {
        grok {
            match => ["message", "%{FAIL2BAN}"]
            patterns_dir => ["/etc/logstash/grok"]
        }
        if [ban_ip] != "" {
            geoip {
                source => "ban_ip"
                add_tag => [ "geoip" ]
                target => "ban_geoip"
            }
        }
    }

}


output {
    # Answers the question - what to do if there is match? 

    elasticsearch {
        cluster => "DAXIONGMAO"
        node_name => "dev.daxiongmao.eu"
        protocol => "http"
        # port => ""
        host => "localhost"
        index => "dev.daxiongmao.eu-%{+YYYY.MM.dd}"
    }
}
